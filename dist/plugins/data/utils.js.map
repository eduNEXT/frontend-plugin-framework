{"version":3,"file":"utils.js","names":["_react","_interopRequireDefault","require","_frontendPlatform","_logging","_constants","e","__esModule","default","ownKeys","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","validateRequirements","requiredTypes","widgetConfig","every","field","validatePlugin","pluginConfig","op","config","logError","PLUGIN_OPERATIONS","Insert","widget","requiredPluginTypes","base","type","toLowerCase","widgetId","id","exports","organizePlugins","defaultContents","plugins","newContents","change","Hide","find","w","hidden","Modify","widgetIdx","findIndex","content","fn","Wrap","newWidget","wrappers","wrapper","sort","a","b","priority","localeCompare","wrapComponent","renderComponent","reduce","component","idx","React","createElement","key","getConfigSlots","getConfig","pluginSlots","mergeProps","originalProps","undefined","newProps","updatedProps","entries","_ref","attributeName","attributeValue","transformedAttributeValue","className","join","trim","style","oldFn","mergeRenderWidgetPropsWithPluginContent","_ref2","pluginSlotOptions","pluginProps","renderWidgetProps","renderWidgetPropsWithPluginProps","updatedRenderWidgetProps","shouldMergeProps"],"sources":["../../../src/plugins/data/utils.jsx"],"sourcesContent":["import React from 'react';\nimport { getConfig } from '@edx/frontend-platform';\nimport { logError } from '@edx/frontend-platform/logging';\nimport { PLUGIN_OPERATIONS, requiredPluginTypes } from './constants';\n\n/**\n * Called by validatePlugin to compare plugin config to the required data and data types\n * @returns {Boolean} - returns true if all types are correct and present according to the plugin operation\n */\nconst validateRequirements = (requiredTypes, widgetConfig) => Object.keys(requiredTypes).every(\n  // eslint-disable-next-line valid-typeof\n  (field) => (widgetConfig[field] && (typeof widgetConfig[field] === requiredTypes[field])),\n);\n\n/**\n * Called by organizePlugins to validate plugin configurations\n * @returns {Boolean} - boolean if all types are correct and present, else throws an error\n */\nexport const validatePlugin = (pluginConfig) => {\n  let requiredTypes = {};\n  const { op } = pluginConfig;\n  let config = pluginConfig;\n\n  if (!op) { logError('There is a config with an invalid PLUGIN_OPERATION. Check to make sure it is configured correctly.'); }\n\n  if (op === PLUGIN_OPERATIONS.Insert) {\n    config = config.widget;\n    if (!config) { logError('insert operation config is missing widget object'); }\n\n    requiredTypes = {\n      ...requiredPluginTypes[op].base,\n      ...requiredPluginTypes[op][config.type?.toLowerCase()],\n    };\n  } else {\n    requiredTypes = requiredPluginTypes[op];\n  }\n\n  if (!validateRequirements(requiredTypes, config)) {\n    logError(`the ${op} operation config is invalid for widget id: ${config.widgetId || config.id || 'MISSING ID'}`);\n  }\n\n  return true;\n};\n\n/**\n * Called by PluginSlot to prepare the plugin changes for the given slot\n *\n * @param {Array} defaultContents - The default widgets where the plugin slot exists.\n * @param {Array} plugins - All of the changes assigned to the specific plugin slot\n * @returns {Array} - A sorted list of widgets with any additional properties needed to render them in the plugin slot\n */\nexport const organizePlugins = (defaultContents, plugins) => {\n  const newContents = [...defaultContents];\n  plugins.forEach(change => {\n    validatePlugin(change);\n    if (change.op === PLUGIN_OPERATIONS.Insert) {\n      newContents.push(change.widget);\n    } else if (change.op === PLUGIN_OPERATIONS.Hide) {\n      const widget = newContents.find((w) => w.id === change.widgetId);\n      if (widget) { widget.hidden = true; }\n    } else if (change.op === PLUGIN_OPERATIONS.Modify) {\n      const widgetIdx = newContents.findIndex((w) => w.id === change.widgetId);\n      if (widgetIdx >= 0) {\n        const widget = { content: {}, ...newContents[widgetIdx] };\n        newContents[widgetIdx] = change.fn(widget);\n      }\n    } else if (change.op === PLUGIN_OPERATIONS.Wrap) {\n      const widgetIdx = newContents.findIndex((w) => w.id === change.widgetId);\n      if (widgetIdx >= 0) {\n        const newWidget = { wrappers: [], ...newContents[widgetIdx] };\n        newWidget.wrappers.push(change.wrapper);\n        newContents[widgetIdx] = newWidget;\n      }\n    }\n  });\n\n  newContents.sort((a, b) => (a.priority - b.priority) * 10_000 + a.id.localeCompare(b.id));\n  return newContents;\n};\n\n/** Wraps the plugin component with number of wrappers provided.\n *\n * @param {Function} renderComponent - Function that returns JSX (i.e. React Component)\n * @param {Array} wrappers - Array of components that each use a \"component\" prop to render the wrapped contents\n * @returns {React.ReactElement} - The plugin component wrapped by any number of wrappers provided.\n*/\nexport const wrapComponent = (renderComponent, wrappers) => wrappers.reduce(\n  // Disabled lint because currently we don't have a unique identifier for this\n  // The \"component\" and \"wrapper\" are both functions\n  // eslint-disable-next-line react/no-array-index-key\n  (component, wrapper, idx) => React.createElement(wrapper, { component, key: idx }),\n  renderComponent(),\n);\n\n/**\n * Called by usePluginSlot to retrieve the most up-to-date Config Document*\n * @returns {object|undefined} - The pluginSlots object in Config Document\n */\nexport const getConfigSlots = () => getConfig()?.pluginSlots;\n\n/**\n * @param {object} [originalProps]\n * @param {object} [newProps]\n * @returns {object} Original props merged with new props.\n */\nconst mergeProps = (originalProps = {}, newProps = {}) => {\n  const updatedProps = { ...originalProps };\n  Object.entries(newProps).forEach(([attributeName, attributeValue]) => {\n    let transformedAttributeValue = !attributeValue ? '' : attributeValue;\n    if (attributeName === 'className') {\n      // Append the `className` to the existing `className` prop value (if any)\n      transformedAttributeValue = [updatedProps.className, attributeValue].join(' ').trim();\n    } else if (attributeName === 'style') {\n      // Only update `style` prop if attributeValue is an object\n      if (typeof attributeValue !== 'object') {\n        return;\n      }\n      // Merge the `style` object with the existing `style` prop object (if any)\n      transformedAttributeValue = { ...updatedProps.style, ...attributeValue };\n    } else if (typeof attributeValue === 'function') {\n      // Merge the function with the existing prop's function\n      const oldFn = updatedProps[attributeName];\n      transformedAttributeValue = oldFn ? (...args) => {\n        oldFn(...args);\n        attributeValue(...args);\n      } : attributeValue;\n    }\n    updatedProps[attributeName] = transformedAttributeValue;\n  });\n  return updatedProps;\n};\n\n/**\n * Merges the plugin content with the RenderWidget props, if any. Handles special cases\n * like merging `className`, `style`, and functions.\n * @param {object} [pluginSlotOptions]\n * @param {object} pluginConfig\n * @param {object} pluginProps\n * @param {object} renderWidgetProps\n * @returns {object} - Updated RenderWidget props merged with custom pluginConfig.content.\n */\nexport const mergeRenderWidgetPropsWithPluginContent = ({\n  pluginSlotOptions,\n  pluginConfig,\n  pluginProps,\n  renderWidgetProps,\n}) => {\n  // Always merge RenderWidget props and pluginProps and provide a `key`.\n  const renderWidgetPropsWithPluginProps = mergeProps(renderWidgetProps, pluginProps);\n  let updatedRenderWidgetProps = { key: pluginConfig.id, ...renderWidgetPropsWithPluginProps };\n\n  // No custom plugin content; return updated props;\n  if (!pluginConfig.content) {\n    return updatedRenderWidgetProps;\n  }\n\n  // Handle custom plugin content\n  const { mergeProps: shouldMergeProps } = pluginSlotOptions;\n\n  if (shouldMergeProps) {\n    updatedRenderWidgetProps = mergeProps(updatedRenderWidgetProps, pluginConfig.content);\n  } else {\n    updatedRenderWidgetProps = {\n      ...updatedRenderWidgetProps,\n      // pass custom props contained with `content` prop\n      content: pluginConfig.content,\n    };\n  }\n\n  return updatedRenderWidgetProps;\n};\n"],"mappings":"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","ignoreList":[]}